# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  paths:
    include:
    - vote/*

variables:
- name: dockerRegistryServiceConnection
  value: '8fb9ec55-11f6-47a9-b606-8e5a86992857'
- name: imageRepository
  value: 'votingapp'
- name: containerRegistry
  value: 'himatejacicd.azurecr.io'
- name: dockerfilePath
  value: '$(Build.SourcesDirectory)/vote/Dockerfile'
- name: tag
  value: '$(Build.BuildId)'

# Use self-hosted pool for all jobs
pool:
  name: 'azureagent'

stages:
- stage: Build
  displayName: Build
  jobs:
  - job: Build
    displayName: Build Docker Image
    steps:
    - task: Docker@2
      displayName: Build an image
      inputs:
        containerRegistry: '$(dockerRegistryServiceConnection)'
        repository: '$(imageRepository)'
        command: 'build'
        Dockerfile: '$(dockerfilePath)'
        tags: '$(tag)'

- stage: Push
  displayName: Push
  dependsOn: Build
  jobs:
  - job: Push
    displayName: Push Docker Image
    steps:
    - task: Docker@2
      displayName: Push an image to container registry
      inputs:
        containerRegistry: '$(dockerRegistryServiceConnection)'
        repository: '$(imageRepository)'
        command: 'push'
        tags: '$(tag)'

- stage: Update
  displayName: Update Kubernetes Manifests
  dependsOn: Push
  jobs:
  - job: Update
    displayName: Update K8s YAML
    steps:
    - checkout: self
      persistCredentials: true   # âœ… ensures push works using System.AccessToken

    # ðŸ”§ Ensure LF line endings
    - script: |
        sudo apt-get update -y
        sudo apt-get install -y dos2unix
        dos2unix scripts/*.sh
      displayName: "Normalize line endings"

    # ðŸ”§ Run update script with OAuth token
    - task: ShellScript@2
      inputs:
        scriptPath: 'scripts/updateK8sManifests.sh'
        args: 'vote $(imageRepository) $(tag)'
      env:
        SYSTEM_ACCESSTOKEN: $(System.AccessToken)
